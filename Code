#include <WiFi.h>
#include <HTTPClient.h>
#include "ThingSpeak.h"

// Define pins
const int led = 13;
const int pirdata = 15;

int pirstate = LOW;
int value = 0;

// Wi-Fi credentials
const char* ssid = "Wokwi-GUEST";
const char* password = "";

// ThingSpeak standard API
const char* apiKey = "61378YN4UGHPKDEW";  
const char* server = "api.thingspeak.com";
const int ChannelNumber= 3000834;

// Alert rate control
unsigned long lastAlertTime = 0;
const unsigned long alertDelay = 60000;
WiFiClient client;

void setup() {
  Serial.begin(115200);
  pinMode(led, OUTPUT);
  pinMode(pirdata, INPUT);

  // Connect to Wi-Fi
  Serial.print("Connecting to Wi-Fi.");
  WiFi.begin(ssid, password);
  int retry=0;
  while (WiFi.status() != WL_CONNECTED && retry<20) {
    delay(1000);
    Serial.print(".");
    retry++;
  }
  Serial.println("\nConnected to Wi-Fi");

  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\nWi-Fi connected!");
    Serial.println("Local IP: "+ String(WiFi.localIP()));
    WiFi.mode(WIFI_STA);
    ThingSpeak.begin(client);
  } 
  else {
    Serial.println("\nWi-Fi connection failed. Check credentials.");
  }
}

void sendMotionData(int motionValue) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;

    String url = String(server) + "?api_key=" + apiKey + "&field1=" + String(motionValue);
    http.begin(url);
    int httpResponseCode = http.GET();

    if (httpResponseCode > 0) {
      Serial.print("ThingSpeak response: ");
      Serial.println(httpResponseCode);
    } else {
      Serial.print("Failed to send data. HTTP code: ");
      Serial.println(httpResponseCode);
    }

    http.end();
  } else {
    Serial.println("Wi-Fi not connected");
  }
}

void loop() {

  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("Reconnecting to Wi-Fi ... ");
    WiFi.begin(ssid, password);
    delay(5000);
    return;
  }

  value = digitalRead(pirdata);

  if (value == HIGH) {
    digitalWrite(led, HIGH);
    if (pirstate == LOW) {
      Serial.println("Motion detected!");
      pirstate = HIGH;
      unsigned long currentTime = millis();
      if (currentTime - lastAlertTime > alertDelay) {
        sendMotionData(1);  // Send '1' for motion detected
        lastAlertTime = currentTime;
      }
    }
  } else {
    digitalWrite(led, LOW);
    if (pirstate == HIGH) {
      Serial.println("Motion ended!");
      pirstate = LOW;
      unsigned long currentTime = millis();
      if (currentTime - lastAlertTime > alertDelay) {
        sendMotionData(0);  // Send '0' for motion ended
        lastAlertTime = currentTime;
      }
    }
  }
  // Update ThingSpeak fields
  ThingSpeak.setField(1, value);

  // Push data to ThingSpeak
  int statusCode = ThingSpeak.writeFields(ChannelNumber, apiKey);
  if (statusCode == 200) {
    Serial.println("Data successfully sent to ThingSpeak!");
  } else {
    Serial.println("Failed to send data. Error code: " + String(statusCode));
  }
  
  
  delay(100);
}
